version: "3.7"

x-git-args: &git-args
  GITHUB_TOKEN: ${GITHUB_TOKEN:-612359e5086512e1906ed81ce0c797678f52274f}

x-pg-env: &pg-env
  POSTGRES_USER: &pg-user ${POSTGRES_USER:-bitgodine}
  POSTGRES_PASSWORD: &pg-psw ${POSTGRES_PASSWORD:-bitgodine}
  POSTGRES_DB: &pg-db ${POSTGRES_DB:-bitgodine}
x-pgadmin-env: &pgadmin-env
  PGADMIN_DEFAULT_EMAIL: patrick.jusic@toggl.com
  PGADMIN_DEFAULT_PASSWORD: *pg-user

x-network: &network
  networks:
    - bitgodine

x-fluentd: &fluentd
  logging:
      driver: fluentd
      options:
        fluentd-address: FLUENT_BIT_ADDRESS:24224

services:
  bitcoind:
    image: kylemanna/bitcoind
    container_name: bitcoind
    volumes:
      - bitcoind-data:/bitcoin
    ports:
      - 8333:8333
      - 127.0.0.1:8332:8332
    <<: *network

  postgres:
    image: postgres
    container_name: postgres
    restart: always
    environment:
      <<: *pg-env
    ports:
      - 5432:5432
    volumes:
      - postgres/:/var/lib/postgresql
    <<: *network

  # pgadmin:
  #   image: dpage/pgadmin4
  #   ports:
  #     - 9876:80
  #   environment:
  #     <<: *pgadmin-env
  #   links:
  #     - postgres
  #   logging:
  #     driver: none
  #   networks:
  #     - bitgodine

  ##########################################
  # Redis setup

  redis:
    image: redis
    container_name: redis
    ports:
      - 6379:6379
    volumes:
      - redis:/redis-data/data
    restart: always
    <<: *network

  ##########################################
  # Services

  bitgodine_parser:
    container_name: parser
    build:
      context: .
      dockerfile: ./docker/parser.Dockerfile
      args:
        <<: *git-args
    command: ./bitgodine start --debug -r=false --blocksDir /bitcoin
    volumes:
      - bitcoind-data:/bitcoin
      - badger:/badger
      - ./config:/root/config
    <<: *network

  bitgodine_server:
    container_name: server
    build:
      context: .
      dockerfile: ./docker/server.Dockerfile
      args:
        <<: *git-args
    ports:
      - 3001:3001
      - 9464:9464
    volumes:
      - badger:/badger
      - analysis:/analysis
      - ./config:/root/config
    depends_on:
      - postgres
    logging:
      driver: fluentd
      options:
        fluentd-address: FLUENT_BIT_ADDRESS:24224
    <<: [*network, *fluentd]

  bitgodine_clusterizer:
    container_name: clusterizer
    build:
      context: .
      dockerfile: ./docker/clusterizer.Dockerfile
      args:
        <<: *git-args
    command: ./bitgodine start --debug
    volumes:
      - utxoset:/utxoset
      - badger:/badger
      - ./config:/root/config
    depends_on:
      - postgres
    <<: *network

  bitgodine_spider:
    container_name: spider
    build:
      context: .
      dockerfile: ./docker/spider.Dockerfile
      args:
        <<: *git-args
    volumes:
      - ./bitgodine_spider/config:/root/config
    depends_on:
      - postgres
    <<: *network

  # bitgodine_plotter:
  #   container_name: plotter
  #   build:
  #     context: ./bitgodine_plotter
  #     dockerfile: Dockerfile
  #   ports:
  #     - 5000:5000
  #   networks:
  #    - bitgodine

  ##########################################
  # OpenTelemetry
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 9411:9411
    <<: *network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/prometheus
      - prometheus_config:/fragments/
      - ${PWD}/config/otel/prometheus/targets/prometheus.json:/etc/prometheus/targets/prometheus.json
      - ${PWD}/config/otel/prometheus/targets/grafana.json:/etc/prometheus/targets/grafana.json
      - ${PWD}/config/otel/prometheus/targets/app.json:/etc/prometheus/targets/app.json
    command:
      - "--config.file=/fragments/complete/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - config-concat
    <<: *network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "4000:3000"
    volumes:
      - grafana_lib:/var/lib/grafana
      - ${PWD}/config/otel/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=secret
    <<: *network

  config-concat:
    image: deanwilson/promconf-concat:0.1.0
    container_name: config-concat
    restart: always
    volumes:
      - prometheus_config:/fragments/
      - ${PWD}/config/otel/prometheus/base_prometheus.yml:/base_prometheus.yml

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - 3100:3100
    <<: *network

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    container_name: fluent-bit
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    volumes:
      - ./config/otel/grafana/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    <<: *network

volumes:
  dgraph:
  badger:
  redis:
  analysis:
  disjoint:
  bolt:
  utxoset:
  bitcoind-data:
  postgres:

  grafana_lib:
  prometheus_data:
  prometheus_config:
    driver_opts:
      type: tmpfs
      device: tmpfs

networks:
  bitgodine:
